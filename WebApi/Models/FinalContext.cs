// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Travel.WebApi.Models;

public partial class finalContext : DbContext
{
    public finalContext(DbContextOptions<finalContext> options)
        : base(options)
    {
    }

    public virtual DbSet<accommodation> accommodation { get; set; }

    public virtual DbSet<article_customization_list> article_customization_list { get; set; }

    public virtual DbSet<article_list> article_list { get; set; }

    public virtual DbSet<article_overview> article_overview { get; set; }

    public virtual DbSet<article_picture> article_picture { get; set; }

    public virtual DbSet<article_repository> article_repository { get; set; }

    public virtual DbSet<basic_commodity_information> basic_commodity_information { get; set; }

    public virtual DbSet<basic_member_information> basic_member_information { get; set; }

    public virtual DbSet<bodyshape_table> bodyshape_table { get; set; }

    public virtual DbSet<comment> comment { get; set; }

    public virtual DbSet<commodity_interactive> commodity_interactive { get; set; }

    public virtual DbSet<commodity_interest> commodity_interest { get; set; }

    public virtual DbSet<commodity_language> commodity_language { get; set; }

    public virtual DbSet<commodity_picture> commodity_picture { get; set; }

    public virtual DbSet<coupon_discount_table> coupon_discount_table { get; set; }

    public virtual DbSet<coupon_table> coupon_table { get; set; }

    public virtual DbSet<coupontable> coupontable { get; set; }

    public virtual DbSet<gold_exchange_table> gold_exchange_table { get; set; }

    public virtual DbSet<interactive_table> interactive_table { get; set; }

    public virtual DbSet<interest_table_> interest_table_ { get; set; }

    public virtual DbSet<language_table> language_table { get; set; }

    public virtual DbSet<level_table> level_table { get; set; }

    public virtual DbSet<mall_product_purchase_record> mall_product_purchase_record { get; set; }

    public virtual DbSet<mall_product_space> mall_product_space { get; set; }

    public virtual DbSet<mall_product_table> mall_product_table { get; set; }

    public virtual DbSet<members_like> members_like { get; set; }

    public virtual DbSet<offline_area_table> offline_area_table { get; set; }

    public virtual DbSet<offline_type_table> offline_type_table { get; set; }

    public virtual DbSet<online_type_table> online_type_table { get; set; }

    public virtual DbSet<order> order { get; set; }

    public virtual DbSet<product_datetime> product_datetime { get; set; }

    public virtual DbSet<product_offline_topics> product_offline_topics { get; set; }

    public virtual DbSet<product_online_topics> product_online_topics { get; set; }

    public virtual DbSet<product_travel> product_travel { get; set; }

    public virtual DbSet<profession_table> profession_table { get; set; }

    public virtual DbSet<shoprecord> shoprecord { get; set; }

    public virtual DbSet<shoprecord_detail> shoprecord_detail { get; set; }

    public virtual DbSet<storedrecord> storedrecord { get; set; }

    public virtual DbSet<tracklist> tracklist { get; set; }

    public virtual DbSet<travel_details> travel_details { get; set; }

    public virtual DbSet<travel_transportation_table> travel_transportation_table { get; set; }

    public virtual DbSet<travelarea_table> travelarea_table { get; set; }

    public virtual DbSet<travelpictures_table> travelpictures_table { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Chinese_Taiwan_Stroke_CI_AS");

        modelBuilder.Entity<accommodation>(entity =>
        {
            entity.HasKey(e => e.accommodation_id);
        });

        modelBuilder.Entity<article_customization_list>(entity =>
        {
            entity.HasKey(e => e.article_list_id);

            entity.Property(e => e.article_list_name).HasMaxLength(50);
        });

        modelBuilder.Entity<article_list>(entity =>
        {
            entity.HasKey(e => e.article_list_id);

            entity.HasOne(d => d.memberunique).WithMany(p => p.article_list)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_article_list_basic_member_information");
        });

        modelBuilder.Entity<article_overview>(entity =>
        {
            entity.HasKey(e => e.article_id);

            entity.Property(e => e.create_time).HasColumnType("datetime");
            entity.Property(e => e.update_time).HasColumnType("datetime");

            entity.HasOne(d => d.memberunique).WithMany(p => p.article_overview)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_article_overview_basic_member_information");
        });

        modelBuilder.Entity<article_picture>(entity =>
        {
            entity.HasKey(e => e.article_pictures_id);

            entity.HasOne(d => d.article).WithMany(p => p.article_picture)
                .HasForeignKey(d => d.article_id)
                .HasConstraintName("FK_article_picture_article_overview");
        });

        modelBuilder.Entity<article_repository>(entity =>
        {
            entity.HasKey(e => e.article_repository_id);

            entity.HasOne(d => d.article).WithMany(p => p.article_repository)
                .HasForeignKey(d => d.article_id)
                .HasConstraintName("FK_article_repository_article_overview");

            entity.HasOne(d => d.article_list).WithMany(p => p.article_repository)
                .HasForeignKey(d => d.article_list_id)
                .HasConstraintName("FK_article_repository_article_list");
        });

        modelBuilder.Entity<basic_commodity_information>(entity =>
        {
            entity.HasKey(e => e.commodity_id).HasName("PK_basiccommodityinformation");

            entity.Property(e => e.bodyshape_id).HasMaxLength(50);
            entity.Property(e => e.gender).HasMaxLength(50);
            entity.Property(e => e.lover_nickname).HasMaxLength(50);
            entity.Property(e => e.profession_id).HasMaxLength(50);

            entity.HasOne(d => d.bodyshape).WithMany(p => p.basic_commodity_information)
                .HasForeignKey(d => d.bodyshape_id)
                .HasConstraintName("FK_basic_commodity_information_bodyshape_table");

            entity.HasOne(d => d.memberunique).WithMany(p => p.basic_commodity_information)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_basic_commodity_information_basic_member_information");

            entity.HasOne(d => d.profession).WithMany(p => p.basic_commodity_information)
                .HasForeignKey(d => d.profession_id)
                .HasConstraintName("FK_basic_commodity_information_profession_table");
        });

        modelBuilder.Entity<basic_member_information>(entity =>
        {
            entity.HasKey(e => e.memberunique_id);

            entity.Property(e => e.birthday).HasColumnType("datetime");
            entity.Property(e => e.email).HasMaxLength(50);
            entity.Property(e => e.house_createtime).HasColumnType("datetime");
            entity.Property(e => e.house_name).HasMaxLength(50);
            entity.Property(e => e.house_renewtime).HasColumnType("datetime");
            entity.Property(e => e.introduction).HasMaxLength(50);
            entity.Property(e => e.member_name).HasMaxLength(50);
            entity.Property(e => e.member_value).HasColumnType("money");
            entity.Property(e => e.password).HasMaxLength(50);
            entity.Property(e => e.phone).HasMaxLength(50);

            entity.HasOne(d => d.level).WithMany(p => p.basic_member_information)
                .HasForeignKey(d => d.level_id)
                .HasConstraintName("FK_basic_member_information_level_table");
        });

        modelBuilder.Entity<bodyshape_table>(entity =>
        {
            entity.HasKey(e => e.bodyshape_id).HasName("PK_身形");

            entity.Property(e => e.bodyshape_id).HasMaxLength(50);
            entity.Property(e => e.bodyshape_name).HasMaxLength(50);
        });

        modelBuilder.Entity<comment>(entity =>
        {
            entity.HasKey(e => e.comment_id);

            entity.Property(e => e.comment_date_time).HasColumnType("datetime");

            entity.HasOne(d => d.article).WithMany(p => p.comment)
                .HasForeignKey(d => d.article_id)
                .HasConstraintName("FK_comment_article_overview");

            entity.HasOne(d => d.memberunique).WithMany(p => p.comment)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_comment_basic_member_information");
        });

        modelBuilder.Entity<commodity_interactive>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.interactive_id).HasMaxLength(50);

            entity.HasOne(d => d.commodity).WithMany()
                .HasForeignKey(d => d.commodity_id)
                .HasConstraintName("FK_commodity_interactive_basic_commodity_information");

            entity.HasOne(d => d.interactive).WithMany()
                .HasForeignKey(d => d.interactive_id)
                .HasConstraintName("FK_commodity_interactive_interactive_table");
        });

        modelBuilder.Entity<commodity_interest>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.interest_id).HasMaxLength(50);

            entity.HasOne(d => d.commodity).WithMany()
                .HasForeignKey(d => d.commodity_id)
                .HasConstraintName("FK_commodity_interest_basic_commodity_information");

            entity.HasOne(d => d.interest).WithMany()
                .HasForeignKey(d => d.interest_id)
                .HasConstraintName("FK_commodity_interest_interest_table ");
        });

        modelBuilder.Entity<commodity_language>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.language_id).HasMaxLength(50);

            entity.HasOne(d => d.commodity).WithMany()
                .HasForeignKey(d => d.commodity_id)
                .HasConstraintName("FK_commodity_language_basic_commodity_information");

            entity.HasOne(d => d.language).WithMany()
                .HasForeignKey(d => d.language_id)
                .HasConstraintName("FK_commodity_language_language_table");
        });

        modelBuilder.Entity<commodity_picture>(entity =>
        {
            entity.HasNoKey();

            entity.HasOne(d => d.commodity).WithMany()
                .HasForeignKey(d => d.commodity_id)
                .HasConstraintName("FK_commodity_picture_basic_commodity_information");
        });

        modelBuilder.Entity<coupon_discount_table>(entity =>
        {
            entity.HasKey(e => e.coupondiscount_id).HasName("PK_優惠券折扣表");

            entity.Property(e => e.coupondiscount_id).HasMaxLength(50);
            entity.Property(e => e.discountamount).HasColumnType("money");
            entity.Property(e => e.expirationdate).HasColumnType("datetime");
        });

        modelBuilder.Entity<coupon_table>(entity =>
        {
            entity.HasKey(e => e.coupon_id).HasName("PK_優惠券");

            entity.Property(e => e.coupon_id).ValueGeneratedNever();
            entity.Property(e => e.couponame).HasMaxLength(50);
            entity.Property(e => e.coupondiscount_id).HasMaxLength(50);
        });

        modelBuilder.Entity<coupontable>(entity =>
        {
            entity.HasKey(e => e.coupon_id);

            entity.Property(e => e.coupon_id).ValueGeneratedNever();
            entity.Property(e => e.couponame).HasMaxLength(50);
            entity.Property(e => e.coupondiscount_id).HasMaxLength(50);

            entity.HasOne(d => d.coupondiscount).WithMany(p => p.coupontable)
                .HasForeignKey(d => d.coupondiscount_id)
                .HasConstraintName("FK_coupontable_coupon_discount_table");
        });

        modelBuilder.Entity<gold_exchange_table>(entity =>
        {
            entity.HasKey(e => e.gold_denomination_id).HasName("PK_goldexchangetable");

            entity.Property(e => e.gold_amount).HasColumnType("money");
            entity.Property(e => e.gold_denominatio_name).HasMaxLength(50);
            entity.Property(e => e.stored_amount).HasColumnType("money");
        });

        modelBuilder.Entity<interactive_table>(entity =>
        {
            entity.HasKey(e => e.interactive_id).HasName("PK_可接受互動項目");

            entity.Property(e => e.interactive_id).HasMaxLength(50);
            entity.Property(e => e.interactive_name).HasMaxLength(50);
        });

        modelBuilder.Entity<interest_table_>(entity =>
        {
            entity.HasKey(e => e.interest_id).HasName("PK_興趣");

            entity.ToTable("interest_table ");

            entity.Property(e => e.interest_id).HasMaxLength(50);
            entity.Property(e => e.interest_name).HasMaxLength(50);
        });

        modelBuilder.Entity<language_table>(entity =>
        {
            entity.HasKey(e => e.language_id).HasName("PK_商品語言總覽");

            entity.Property(e => e.language_id).HasMaxLength(50);
            entity.Property(e => e.language_name).HasMaxLength(50);
        });

        modelBuilder.Entity<level_table>(entity =>
        {
            entity.HasKey(e => e.level_id);

            entity.Property(e => e.level_name)
                .HasMaxLength(10)
                .IsFixedLength();
        });

        modelBuilder.Entity<mall_product_purchase_record>(entity =>
        {
            entity.HasKey(e => e.mprecord_id);

            entity.Property(e => e.exchange_time).HasColumnType("datetime");
            entity.Property(e => e.member_name).HasMaxLength(50);

            entity.HasOne(d => d.mall_product_table).WithMany(p => p.mall_product_purchase_record)
                .HasForeignKey(d => d.mall_product_table_id)
                .HasConstraintName("FK_mall_product_purchase_record_mall_product_table");
        });

        modelBuilder.Entity<mall_product_space>(entity =>
        {
            entity.HasKey(e => e.pspace_id).HasName("PK_mallproductspace_1");

            entity.HasOne(d => d.mall_product_table).WithMany(p => p.mall_product_space)
                .HasForeignKey(d => d.mall_product_table_id)
                .HasConstraintName("FK_mall_product_space_mall_product_table");

            entity.HasOne(d => d.memberunique).WithMany(p => p.mall_product_space)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_mall_product_space_basic_member_information");
        });

        modelBuilder.Entity<mall_product_table>(entity =>
        {
            entity.HasKey(e => e.mall_product_table_id).HasName("PK_mallproductable");

            entity.Property(e => e.mall_product_id).HasMaxLength(50);
            entity.Property(e => e.mall_product_name).HasMaxLength(50);
        });

        modelBuilder.Entity<members_like>(entity =>
        {
            entity.HasKey(e => e.likes_id);

            entity.HasOne(d => d.article).WithMany(p => p.members_like)
                .HasForeignKey(d => d.article_id)
                .HasConstraintName("FK_members_like_article_overview");

            entity.HasOne(d => d.memberunique).WithMany(p => p.members_like)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_members_like_basic_member_information");
        });

        modelBuilder.Entity<offline_area_table>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.area_id)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.area_name).HasMaxLength(50);
        });

        modelBuilder.Entity<offline_type_table>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.offline_type_id)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.offline_type_name).HasMaxLength(50);
        });

        modelBuilder.Entity<online_type_table>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.online_type_id)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.online_type_name).HasMaxLength(50);
        });

        modelBuilder.Entity<order>(entity =>
        {
            entity.HasKey(e => e.order_id);

            entity.Property(e => e.create_time).HasColumnType("datetime");
            entity.Property(e => e.price_fixed).HasColumnType("money");
            entity.Property(e => e.price_unfixed).HasColumnType("money");

            entity.HasOne(d => d.commidity).WithMany(p => p.order)
                .HasForeignKey(d => d.commidity_id)
                .HasConstraintName("FK_order_basic_commodity_information");
        });

        modelBuilder.Entity<product_datetime>(entity =>
        {
            entity.HasKey(e => e.notypedating_id).HasName("PK_productdatetime");

            entity.Property(e => e.dating_id).HasMaxLength(50);
            entity.Property(e => e.price).HasColumnType("money");

            entity.HasOne(d => d.commodity).WithMany(p => p.product_datetime)
                .HasForeignKey(d => d.commodity_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_product_datetime_basic_commodity_information");
        });

        modelBuilder.Entity<product_offline_topics>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.area_id).HasMaxLength(50);
            entity.Property(e => e.dating_id).HasMaxLength(50);
            entity.Property(e => e.offline_topics_name).HasMaxLength(50);
            entity.Property(e => e.offline_type_id).HasMaxLength(50);
            entity.Property(e => e.price).HasColumnType("money");
        });

        modelBuilder.Entity<product_online_topics>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.dating_id).HasMaxLength(50);
            entity.Property(e => e.online_topics_name).HasMaxLength(50);
            entity.Property(e => e.online_type_id).HasMaxLength(50);
            entity.Property(e => e.price).HasColumnType("money");
        });

        modelBuilder.Entity<product_travel>(entity =>
        {
            entity.HasKey(e => e.travel_id);

            entity.Property(e => e.pictures).HasMaxLength(50);
            entity.Property(e => e.price).HasColumnType("money");
            entity.Property(e => e.tag).HasMaxLength(50);
            entity.Property(e => e.travel_datetime).HasColumnType("datetime");
            entity.Property(e => e.travel_meetingpoint).HasMaxLength(50);
            entity.Property(e => e.travel_name).HasMaxLength(50);

            entity.HasOne(d => d.travelarea).WithMany(p => p.product_travel)
                .HasForeignKey(d => d.travelarea_id)
                .HasConstraintName("FK_product_travel_travelarea_table");
        });

        modelBuilder.Entity<profession_table>(entity =>
        {
            entity.HasKey(e => e.profession_id).HasName("PK_職業");

            entity.Property(e => e.profession_id).HasMaxLength(50);
            entity.Property(e => e.profession_name).HasMaxLength(50);
        });

        modelBuilder.Entity<shoprecord>(entity =>
        {
            entity.HasKey(e => e.shop_recordid);

            entity.Property(e => e.member_name).HasMaxLength(50);
            entity.Property(e => e.member_phone).HasMaxLength(20);
            entity.Property(e => e.purchase_time).HasColumnType("datetime");
            entity.Property(e => e.shoporderid).HasMaxLength(50);
        });

        modelBuilder.Entity<shoprecord_detail>(entity =>
        {
            entity.Property(e => e.shoporderid).HasMaxLength(50);

            entity.HasOne(d => d.mall_product_table).WithMany(p => p.shoprecord_detail)
                .HasForeignKey(d => d.mall_product_table_id)
                .HasConstraintName("FK_shoprecord_detail_mall_product_table");

            entity.HasOne(d => d.shop_record).WithMany(p => p.shoprecord_detail)
                .HasForeignKey(d => d.shop_recordid)
                .HasConstraintName("FK_shoprecord_detail_shoprecord");
        });

        modelBuilder.Entity<storedrecord>(entity =>
        {
            entity.HasKey(e => e.store_record_id);

            entity.Property(e => e.purchase_date).HasColumnType("datetime");

            entity.HasOne(d => d.gold_denomination).WithMany(p => p.storedrecord)
                .HasForeignKey(d => d.gold_denomination_id)
                .HasConstraintName("FK_storedrecord_gold_exchange_table1");

            entity.HasOne(d => d.memberunique).WithMany(p => p.storedrecord)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_storedrecord_basic_member_information");
        });

        modelBuilder.Entity<tracklist>(entity =>
        {
            entity.HasKey(e => e.tracklist_id);

            entity.HasOne(d => d.memberunique).WithMany(p => p.tracklist)
                .HasForeignKey(d => d.memberunique_id)
                .HasConstraintName("FK_tracklist_basic_member_information");
        });

        modelBuilder.Entity<travel_details>(entity =>
        {
            entity.HasKey(e => e.travel_details_id);

            entity.HasOne(d => d.travel).WithMany(p => p.travel_details)
                .HasForeignKey(d => d.travel_id)
                .HasConstraintName("FK_travel_details_product_travel1");
        });

        modelBuilder.Entity<travel_transportation_table>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.transport_mode).HasMaxLength(50);
        });

        modelBuilder.Entity<travelarea_table>(entity =>
        {
            entity.HasKey(e => e.travelarea_id).HasName("PK_行程地區");

            entity.Property(e => e.travelarea_name).HasMaxLength(50);
        });

        modelBuilder.Entity<travelpictures_table>(entity =>
        {
            entity.HasKey(e => e.picture_id);

            entity.HasOne(d => d.travel).WithMany(p => p.travelpictures_table)
                .HasForeignKey(d => d.travel_id)
                .HasConstraintName("FK_travelpictures_table_product_travel");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}